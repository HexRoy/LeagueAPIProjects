GuiManager:
    HomeGui:
    ProfileGui:
    MatchGui:
    #AllChampionsGui:
    #SingleChampionGui:

# ==========================================================================================
#       Home Gui: Contains summoner lookup, region selection, and favorites
# ==========================================================================================
<HomeGui>:
    name: "home"
    summoner_name: summonerName
    region_selection: regionSelection
    history_grid_layout: historyGridLayout
    favorites_grid_layout: favoritesGridLayout
    # Background image
    canvas:
        Rectangle:
            pos: self.pos
            size: self.size
            source: "images/background.png"

    FloatLayout:
        size: root.width, root.height

        Image:
            pos_hint: {"top":1.4}
            source: "images/logo.png"

        # Summoner search
        Spinner:
            size_hint: .1, .07
            pos_hint: {"x":.6, "y":.6}
            id: regionSelection
            text: "Region"
            values: "NA", "BR", "EUN", "EUW", "JP", "KR", "LA1", "LA2", "OC", "TR", "RU"
        Label:
            size_hint: .4, .07
            pos_hint: {"x":.2, "y":.65}
            text: "Summoner Name"
        TextInput:
            size_hint: .4, .07
            pos_hint: {"x":.2, "y":.6}
            id: summonerName
            multiline: False
            on_text_validate:
                root.summoner_search()
        Button:
            size_hint: .1, .07
            pos_hint: {"x":.7, "y":.6}
            text: "Search"
            on_release:
                root.summoner_search()
                app.root.transition.direction = "left"

        # Labels for history and favorites
        Label:
            text: "Favorites"
            pos_hint: {"x": -.32, "y": .03}
        Label:
            text: "History"
            pos_hint: {"x": .25, "y": .03}

        # Todo just for test can delete
        Button:
            text: "Refresh"
            pos_hint: {'x': .4}
            size_hint: .15 , .075
            on_press:
                root.populate_history()
                root.populate_favorites()



        # Favorites Scroll view
        ScrollView:
            pos_hint: {"bottom": .2, "x": .03}
            size_hint: .4, .5
            GridLayout:
                id: favoritesGridLayout
                cols: 2
                height: self.minimum_height
                size_hint: None, None



        # History scroll view
        ScrollView:
            pos_hint: {"bottom": .2, "x":.6}
            size_hint: .4, .5
            GridLayout:
                id: historyGridLayout
                cols: 2
                height: self.minimum_height
                size_hint: None, None


# ==========================================================================================
#       Invalid Search Popup: A Window popup for invalid searches
# ==========================================================================================
<InvalidSearchPopup>
    popup_label: popupLabel
    FloatLayout:
        size_hint:(0.3, 0.3)
        pos_hint:{"center_x":0.5, "center_y":0.5}
        Label:
            id: popupLabel
            text: ""        # Text is added based on what error is occurring: Check class for details
            pos_hint: {"x":0.2, "top":1}
            size_hint: 0.6, 0.2
        Button:
            pos_hint: {"x":-0.25, "y":-0.4}
            size_hint: 1.5, 0.8
            text: "Go Back"
            on_release:
                root.close_popup()


# ==========================================================================================
#       Profile Gui: Contains summoner information, and match history
# ==========================================================================================
<ProfileGui>:
    name: "profile"
    profile_summoner_name: profileSummonerName

    profile_solo_rank: profileSoloRank
    profile_solo_rank_icon: profileSoloRankIcon
    profile_solo_win_loss: profileSoloWinLoss

    profile_flex_rank: profileFlexRank
    profile_flex_win_loss: profileFlexWinLoss
    profile_flex_rank_icon: profileFlexRankIcon

    profile_match_history: profileMatchHistory

    canvas:
        Rectangle:
            pos: self.pos
            size: self.size
            source: "images/background.png"

    FloatLayout:
        Button:
            pos_hint: {"top":1}
            size_hint: 1, .15
            background_normal: "images/logo.png"
            on_release:
                app.root.current = "home"
                app.root.transition.direction = "right"
        Label:
            id: profileSummonerName
            font_size: (int(self.height/15) + int(self.width/15)) / 2
            pos_hint: {'y': 0.25}

        # Solo Rank Grid Layout
        GridLayout:
            cols: 1
            size_hint: .3, .2
            pos_hint: {'top': 0.8, 'x': .05}
            col_default_width: self.width
            Label:
                text: "Solo Rank"
                canvas.before:
                    Color:
                        rgba: 0, 0, 0, 1
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Image:
                id: profileSoloRankIcon
                canvas.before:
                    Color:
                        rgba: 0, 0, 0, 1
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Label:
                id: profileSoloRank
                canvas.before:
                    Color:
                        rgba: 1, .5, 0, 1
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Label:
                id: profileSoloWinLoss
                canvas.before:
                    Color:
                        rgba: 1, .5, 0, 1
                    Rectangle:
                        pos: self.pos
                        size: self.size

        # Flex Rank Grid Layout
        GridLayout:
            cols: 1
            size_hint: .3, .2
            pos_hint: {'top': 0.8, 'x': 0.65}
            col_default_width: self.width
            row_default_height: self.minimum_height
            Label:
                text: "Flex Rank"
                canvas.before:
                    Color:
                        rgba: 0, 0, 0, 1
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Image:
                id: profileFlexRankIcon
                canvas.before:
                    Color:
                        rgba: 0, 0, 0, 1
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Label:
                id: profileFlexRank
                canvas.before:
                    Color:
                        rgba: 1, .5, 0, 1
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Label:
                id: profileFlexWinLoss
                canvas.before:
                    Color:
                        rgba: 1, .5, 0, 1
                    Rectangle:
                        pos: self.pos
                        size: self.size

        # Match History Scroll view
        ScrollView:
            pos_hint: {"bottom": .2, 'x':.01}
            size_hint: 1, .5
            GridLayout:
                id: profileMatchHistory
                cols: 5
                height: self.minimum_height
                size_hint: 1, None

# ==========================================================================================
#       Match Gui: Contains summoner lookup, region selection, and favorites
# ==========================================================================================
<MatchGui>:
    name: 'match'
    canvas:
        Rectangle:
            pos: self.pos
            size: self.size
            source: "images/background.png"

    FloatLayout:
        Button:
            pos_hint: {"top":1}
            size_hint: 1, .15
            background_normal: "images/logo.png"
            on_release:
                app.root.current = "home"
                app.root.transition.direction = "right"